#
# Copyright (C) 2018 LeWiz Communications, Inc. 
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library release; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# 
# LeWiz can be contacted at:  support@lewiz.com
# or address:  
# PO Box 9276
# San Jose, CA 95157-9276
# www.lewiz.com
# 
#    Author: LeWiz Communications, Inc.
#    Language: Verilog
#
# source C:/LMAC3_INFO/TESTS/Rx_TESTS/CASE00_04B_PACKETGAP/TEST04_EOF_9_10_11/Script4_RxPath_Test_c00t04_25G.txt                                                             
            
                                                                                                                                                                                                                                                                                                                    
vsim work.axis_lmac_tb                                                                                                                                                                                                                                                                                                          
do C:/LMAC3_INFO/waveforms/rx_test
view -new wave
add wave -r /*


###Load memory 
mem load -i C:/LMAC3_INFO/AXIS_MASTER/memory_wr_data.txt -format hex /AXIS_LMAC_TB/axi_stream_master/memory_wr_module/memory_wr_data
mem load -i C:/LMAC3_INFO/AXIS_MASTER/memory_wr_ctrl.txt -format hex /AXIS_LMAC_TB/axi_stream_master/memory_wr_module/memory_wr_ctrl

mem load -i C:/LMAC3_INFO/TESTS/Rx_TESTS/CASE00_04B_PACKETGAP/TEST04_EOF_9_10_11/rx_pkt_gen_data.mem -format hex /AXIS_LMAC_TB/phy_emulator_100G/rx_pkt_gen_100G/rx_pkt_gen2kx256_inst/dram_data/mem
mem load -i C:/LMAC3_INFO/TESTS/Rx_TESTS/CASE00_04B_PACKETGAP/TEST04_EOF_9_10_11/rx_pkt_gen_ctrl.mem -format hex /AXIS_LMAC_TB/phy_emulator_100G/rx_pkt_gen_100G/rx_pkt_gen2kx32_inst/dram_ctrl/mem


###Clock assignment depending on fmac_speed 
force -freeze sim:/AXIS_LMAC_TB/clk 0 0, 1 {640 ps} -r {1280 ps}

force -freeze sim:/AXIS_LMAC_TB/tx_mac_aclk 0 0, 1 {640 ps} -r {1280 ps}
force -freeze sim:/AXIS_LMAC_TB/rx_mac_aclk 0 0, 1 {640 ps} -r {1280 ps}

force -freeze sim:/AXIS_LMAC_TB/xA_clk 0 0, 1 {1280 ps} -r {2560 ps}


###assign speed
force -freeze sim:/AXIS_LMAC_TB/fmac_speed 3'd1 0


# Select the rx_pkt_gen memory data
run 500ns
force -freeze sim:/AXIS_LMAC_TB/rx_pkt_gen_sel 1 0

# Generate the rx_pkt_gen data packet	-- (pkt-1, pkt-2 and pkt-3)
force -freeze sim:/AXIS_LMAC_TB/phy_emulator_100G/rx_pkt_gen_read_cnt 11'd92 0
force -freeze sim:/AXIS_LMAC_TB/phy_emulator_100G/rx_pkt_gen_start_addr 64'd1 0
force -freeze sim:/AXIS_LMAC_TB/phy_emulator_100G/rx_pkt_gen_en 1 0
run 2.56ns
force -freeze sim:/AXIS_LMAC_TB/phy_emulator_100G/rx_pkt_gen_en 0 0


run 5us